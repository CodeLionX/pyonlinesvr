# akita conda runner uses the following image by default:
# image: continuumio/miniconda3:4.9.2

stages:
  - test
  - build

workflow:
  rules:
    # If `$FORCE_GITLAB_CI` is set, create a pipeline.
    - if: '$FORCE_GITLAB_CI'
    # For merge requests, create a pipeline.
    - if: '$CI_MERGE_REQUEST_IID'
    # For `main` branch, create a pipeline (this includes on schedules, pushes, merges, etc.).
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    # For tags, create a pipeline.
    - if: '$CI_COMMIT_TAG'
    # For branches starting with 'doc/' don't create a pipeline
    - if: '$CI_COMMIT_BRANCH =~ /^doc\//'
      when: never

before_script: &global_before_script
  - export PIP_CACHE_DIR="/opt/cache/pip"
  - echo "Setting up conda environment and installing dependencies"
  # we must use python>=3.6.10 to prevent linker error: https://github.com/ContinuumIO/anaconda-issues/issues/11152
  - conda create -y -n testenv python=${PYTHON_VERSION:-3.6.10} swig gcc_linux-64 gxx_linux-64
  - source activate testenv

test:
  stage: test
  interruptible: true
  tags:
    - akita
    - conda
  before_script:
    - *global_before_script
    - pip install $(python dependencies.py --tag test)
  script:
    - flake8
    # Generates python source files and builds C++ extension
    - python setup.py build_ext --inplace
    - mypy
    - pytest

linux-build-deploy-source:
  stage: build
  tags:
    - akita
    - conda
  only:
    - tags
  before_script:
    - *global_before_script
    - pip install $(python dependencies.py --tag deploy --no-pin)
  script:
    - echo "## build"
    - python setup.py sdist
    - echo "## deploy"
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url https://gitlab.hpi.de/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*

linux-build-deploy-binaries:
  stage: build
  tags:
    - akita
    - conda
  only:
    - tags
  before_script:
    - *global_before_script
    - pip install $(python dependencies.py --tag deploy --no-pin)
  script:
    - echo "## build"
    - python setup.py bdist_wheel
    - echo "## deploy"
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url https://gitlab.hpi.de/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.6.10", "3.7", "3.8", "3.9"]
