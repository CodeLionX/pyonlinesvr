# akita conda runner uses the following image by default:
# image: continuumio/miniconda3:4.9.2

stages:
  - build
  - test
  - deploy

workflow:
  rules:
    # If `$FORCE_GITLAB_CI` is set, create a pipeline.
    - if: '$FORCE_GITLAB_CI'
    # For merge requests, create a pipeline.
    - if: '$CI_MERGE_REQUEST_IID'
    # For `main` branch, create a pipeline (this includes on schedules, pushes, merges, etc.).
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    # For tags, create a pipeline.
    - if: '$CI_COMMIT_TAG'
    # For branches starting with 'doc/' don't create a pipeline
    - if: '$CI_COMMIT_BRANCH =~ /^doc\//'
      when: never

.linux-common:
  tags:
    - akita
    - conda
  only:
    - tags
  before_script: &common_before_script
    - export PIP_CACHE_DIR="/opt/cache/pip"
    - echo "Setting up conda environment and installing dependencies"
    # we must use python>=3.6.10 to prevent linker error: https://github.com/ContinuumIO/anaconda-issues/issues/11152
    - conda create -y -n testenv python=${PYTHON_VERSION:-3.6.10}
    - source activate testenv
    - pip install $(python dependencies.py --tag "${DEP_TAG:-test}" --no-pin)
  cache:
    key: "cache-python$PYTHON_VERSION"
    untracked: true

test:
  stage: test
  interruptible: true
  tags:
    - akita
    - conda
  except:
    - tags
  variables:
    DEP_TAG: test
  before_script:
    - *common_before_script
    - conda install -y -n testenv swig gcc_linux-64 gxx_linux-64
  script:
    - flake8
    # Generates python source files and builds C++ extension
    - python setup.py build_ext --inplace
    - mypy
    - pytest

linux-build:
  extends: .linux-common
  stage: build
  variables:
    DEP_TAG: build
  before_script:
    - *common_before_script
    - conda install -y -n testenv swig gcc_linux-64 gxx_linux-64
  script:
    - python setup.py build_ext --inplace
  cache:
    policy: push
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.6.10", "3.7", "3.8", "3.9"]

linux-test:
  extends: .linux-common
  stage: test
  variables:
    DEP_TAG: test
  script:
    - flake8
    - mypy
    - pytest
  cache:
    policy: pull
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.6.10", "3.7", "3.8", "3.9"]

linux-deploy-wheel:
  extends: .linux-common
  stage: deploy
  variables:
    DEP_TAG: deploy
  before_script:
    - *common_before_script
    - conda install -y -n testenv swig gcc_linux-64 gxx_linux-64
  script:
    - python setup.py bdist_wheel
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url https://gitlab.hpi.de/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  cache:
    policy: pull
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.6.10", "3.7", "3.8", "3.9"]

linux-deploy-source:
  extends: .linux-common
  stage: deploy
  variables:
    DEP_TAG: deploy
  before_script:
    - *common_before_script
    - conda install -y -n testenv swig gcc_linux-64 gxx_linux-64
  script:
    - python setup.py sdist
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url https://gitlab.hpi.de/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  cache:
    policy: pull
