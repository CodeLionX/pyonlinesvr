name: Build

on:
  push:
    branches:
    - main
    - ci/*
    tags:
    - v*

jobs:

  build-source-distribution:
    name: Building source distribution
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.1.1
      with:
        auto-update-conda: true
        python-version: 3.7
    - name: Build source distribution
      run: |
        python setup.py sdist
    - name: Upload packages
      uses: actions/upload-artifact@v3
      with:
        name: packages-source
        path: dist

  build-manylinux-wheels:
    name: Build wheels on ${{ matrix.os }}
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        # os: [ubuntu-20.04, windows-2019, macos-11]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        env:
          # CIBW_BUILD: cp37-manylinux_x86_64 cp38-manylinux_x86_64 cp39-manylinux_x86_64 cp310-manylinux_x86_64 cp311-manylinux_x86_64
          CIBW_SKIP: cp36* cp312* pp* *arm64 *i686 *win32
          CIBW_BEFORE_BUILD_WINDOWS: pip install swig
          CIBW_TEST_EXTRAS: test
          CIBW_TEST_COMMAND: mv {project}/pyonlinesvr {project}/pyonlinesvr.bak && pytest {project}/tests; mv {project}/pyonlinesvr.bak {project}/pyonlinesvr
          CIBW_TEST_COMMAND_WINDOWS: bash {project}\ci\test.sh {project}
          # definitively skip testing emulated and cross-compiled architectures
          CIBW_TEST_SKIP: "*-*linux_{aarch64,ppc64le,s390x} *-macosx_arm64 *-macosx_universal2:arm64"
        with:
          output-dir: dist

      - uses: actions/upload-artifact@v3
        with:
          name: packages-manylinux
          path: ./dist/*.whl

  publish:
    name: Publish distributions
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [build-manylinux-wheels, build-source-distribution]
    runs-on: ubuntu-latest

    steps:
    - name: Download packages
      uses: actions/download-artifact@v2
      with:
        path: dist
    - name: Restore original folder structure of dist
      run: |
        find dist -type f -exec mv {} dist/ \;
        find dist/* -type d -exec rmdir {} \; || true
    - name: Publish package to PyPi
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
